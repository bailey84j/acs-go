{% set jsonquery = '[?name==`' + item + '`].func[]' %}
package {{ item | lower}}

import (
    {% for func in acs_methods_raw | json_query(jsonquery)  %}
    {% if 'name' in func | json_query('detail.parameters[?!required][]') | string %}
    {% if x is defined %}{%else%}
    "fmt"{% endif %}{% endif %}{% set x = 'complete' %}{%endfor%}
    
    tools "github.com/bailey84j/acs-go/acs/tools"
    client "github.com/bailey84j/acs-go/acs/client"
)

type {{ item }} struct {
	Client client.Client
}
{% for func in acs_methods_raw | json_query(jsonquery)  %}
    {% for detail in func %}
    {%- if detail.summary is defined -%}
    // {{ detail.summary | replace('\n',' ') }}
    {% endif %}
        // {{ detail }}(
    {%- if 'name' in detail | json_query('detail.parameters[?required][]') | string -%}
        {%- for reqparam in detail | json_query('detail.parameters[?required][]') -%}
            {{ reqparam.name | replace('.','_') }} {{ reqparam.schema.type }},
        {%- endfor -%}
    {%- endif -%}args map[string]interface{}) {

    {% if 'name' in detail | json_query('detail.parameters[?!required][]') | string %}
        ok := tools.CheckFieldsValid("
    {%- for notreqparam in detail | json_query('detail.parameters[?!required][]') -%}
    {{ notreqparam.name | replace('.','_') }}_{{ notreqparam.schema.type }}{{ "," if not loop.last }}{%- endfor -%}",args)
    if !ok {
		fmt.Printf("Variable Vaidation Failed")
    }
    {%- endif %}

    tools.{{ func.method }}Resource()
{% for field  in swaggerFile['paths'].values() %}
{% for fieldkey in field.keys() %}

{{ field[fieldkey]['operationId'] }}
//
{{ detail }}

uriPath := {{ field }}





{% endfor %}
{% endfor %}
}
{% endfor %}
{% endfor %}
