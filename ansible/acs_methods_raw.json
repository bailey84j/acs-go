[{"name": "Alert", "func": [{"method": "get", "detail": [{"summary": "List returns the slim list version of the alerts.", "operationId": "AlertService_ListAlerts", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1ListAlertsResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "query", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pagination.limit", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "pagination.offset", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "pagination.sortOption.field", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pagination.sortOption.reversed", "in": "query", "required": false, "schema": {"type": "boolean"}}], "tags": ["AlertService"]}, {"summary": "GetAlertsCounts returns the number of alerts in the requested cluster or category.", "operationId": "AlertService_GetAlertsCounts", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetAlertsCountsResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "request.query", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "request.pagination.limit", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "request.pagination.offset", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "request.pagination.sortOption.field", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "request.pagination.sortOption.reversed", "in": "query", "required": false, "schema": {"type": "boolean"}}, {"name": "groupBy", "in": "query", "required": false, "schema": {"type": "string", "enum": ["UNSET", "CATEGORY", "CLUSTER"], "default": "UNSET"}}], "tags": ["AlertService"]}, {"summary": "GetAlertsGroup returns alerts grouped by policy.", "operationId": "AlertService_GetAlertsGroup", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetAlertsGroupResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "query", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pagination.limit", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "pagination.offset", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "pagination.sortOption.field", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pagination.sortOption.reversed", "in": "query", "required": false, "schema": {"type": "boolean"}}], "tags": ["AlertService"]}, {"summary": "GetAlertTimeseries returns the alerts sorted by time.", "operationId": "AlertService_GetAlertTimeseries", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetAlertTimeseriesResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "query", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pagination.limit", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "pagination.offset", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "pagination.sortOption.field", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pagination.sortOption.reversed", "in": "query", "required": false, "schema": {"type": "boolean"}}], "tags": ["AlertService"]}, {"summary": "GetAlert returns the alert given its id.", "operationId": "AlertService_GetAlert", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storageAlert"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["AlertService"]}, {"summary": "CountAlerts counts how many alerts match the get request.", "operationId": "AlertService_CountAlerts", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1CountAlertsResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "query", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pagination.limit", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "pagination.offset", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "pagination.sortOption.field", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pagination.sortOption.reversed", "in": "query", "required": false, "schema": {"type": "boolean"}}], "tags": ["AlertService"]}]}]}, {"name": "APIToken", "func": [{"method": "get", "detail": [{"summary": "GetAPITokens returns all the API tokens.", "operationId": "APITokenService_GetAPITokens", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetAPITokensResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "revoked", "in": "query", "required": false, "schema": {"type": "boolean"}}], "tags": ["APITokenService"]}, {"summary": "GetAPIToken returns API token metadata for a given id.", "operationId": "APITokenService_GetAPIToken", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storageTokenMetadata"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["APITokenService"]}]}]}, {"name": "Auth", "func": [{"method": "get", "detail": [{"operationId": "AuthService_GetAuthStatus", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1AuthStatus"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["AuthService"]}]}]}, {"name": "AuthProvider", "func": [{"method": "get", "detail": [{"operationId": "AuthProviderService_GetAuthProviders", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetAuthProvidersResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "name", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "type", "in": "query", "required": false, "schema": {"type": "string"}}], "tags": ["AuthProviderService"]}, {"operationId": "AuthProviderService_GetAuthProvider", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storageAuthProvider"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["AuthProviderService"]}, {"operationId": "AuthProviderService_ListAvailableProviderTypes", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1AvailableProviderTypesResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["AuthProviderService"]}, {"operationId": "AuthProviderService_GetLoginAuthProviders", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetLoginAuthProvidersResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["AuthProviderService"]}]}]}, {"name": "ExternalBackup", "func": [{"method": "get", "detail": [{"summary": "GetExternalBackups returns all external backup configurations.", "operationId": "ExternalBackupService_GetExternalBackups", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetExternalBackupsResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["ExternalBackupService"]}, {"summary": "GetExternalBackup returns the external backup configuration given its ID.", "operationId": "ExternalBackupService_GetExternalBackup", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storageExternalBackup"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["ExternalBackupService"]}]}]}, {"name": "CentralHealth", "func": [{"method": "get", "detail": [{"operationId": "CentralHealthService_GetUpgradeStatus", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetUpgradeStatusResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["CentralHealthService"]}]}]}, {"name": "ClusterInit", "func": [{"method": "get", "detail": [{"operationId": "ClusterInitService_GetCAConfig", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetCAConfigResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["ClusterInitService"]}, {"operationId": "ClusterInitService_GetInitBundles", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1InitBundleMetasResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["ClusterInitService"]}]}]}, {"name": "Clusters", "func": [{"method": "get", "detail": [{"operationId": "ClustersService_GetClusterDefaultValues", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1ClusterDefaultsResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["ClustersService"]}, {"operationId": "ClustersService_GetClusters", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1ClustersList"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "query", "in": "query", "required": false, "schema": {"type": "string"}}], "tags": ["ClustersService"]}, {"summary": "GetKernelSupportAvailable is deprecated in favor of GetClusterDefaultValues.", "operationId": "ClustersService_GetKernelSupportAvailable", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1KernelSupportAvailableResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["ClustersService"]}, {"operationId": "ClustersService_GetCluster", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1ClusterResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["ClustersService"]}]}]}, {"name": "ComplianceManagement", "func": [{"method": "get", "detail": [{"operationId": "ComplianceManagementService_GetRecentRuns", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetRecentComplianceRunsResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "clusterId", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "standardId", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "since", "in": "query", "required": false, "schema": {"type": "string", "format": "date-time"}}], "tags": ["ComplianceManagementService"]}, {"operationId": "ComplianceManagementService_GetRunStatuses", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetComplianceRunStatusesResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "runIds", "in": "query", "required": false, "explode": true, "schema": {"type": "array", "items": {"type": "string"}}}], "tags": ["ComplianceManagementService"]}]}]}, {"name": "Compliance", "func": [{"method": "get", "detail": [{"operationId": "ComplianceService_GetAggregatedResults", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storageComplianceAggregationResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "groupBy", "in": "query", "required": false, "explode": true, "schema": {"type": "array", "items": {"type": "string", "enum": ["UNKNOWN", "STANDARD", "CLUSTER", "CATEGORY", "CONTROL", "NAMESPACE", "NODE", "DEPLOYMENT", "CHECK"]}}}, {"name": "unit", "in": "query", "required": false, "schema": {"type": "string", "enum": ["UNKNOWN", "STANDARD", "CLUSTER", "CATEGORY", "CONTROL", "NAMESPACE", "NODE", "DEPLOYMENT", "CHECK"], "default": "UNKNOWN"}}, {"name": "where.query", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "where.pagination.limit", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "where.pagination.offset", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "where.pagination.sortOption.field", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "where.pagination.sortOption.reversed", "in": "query", "required": false, "schema": {"type": "boolean"}}], "tags": ["ComplianceService"]}, {"operationId": "ComplianceService_GetRunResults", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetComplianceRunResultsResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "clusterId", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "standardId", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "runId", "description": "Specifies the run ID for which to return results. If empty, the most recent run is returned.\nCAVEAT: Setting this field circumvents the results cache on the server-side, which may lead to significantly\n        increased memory pressure and decreased performance.", "in": "query", "required": false, "schema": {"type": "string"}}], "tags": ["ComplianceService"]}, {"operationId": "ComplianceService_GetStandards", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetComplianceStandardsResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["ComplianceService"]}, {"operationId": "ComplianceService_GetStandard", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetComplianceStandardResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["ComplianceService"]}]}]}, {"name": "Config", "func": [{"method": "get", "detail": [{"operationId": "ConfigService_GetConfig", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storageConfig"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["ConfigService"]}, {"operationId": "ConfigService_GetPrivateConfig", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storagePrivateConfig"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["ConfigService"]}, {"operationId": "ConfigService_GetPublicConfig", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storagePublicConfig"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["ConfigService"]}]}]}, {"name": "CredentialExpiry", "func": [{"method": "get", "detail": [{"summary": "GetCertExpiry returns information related to the expiry component mTLS certificate.", "operationId": "CredentialExpiryService_GetCertExpiry", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetCertExpiryResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "component", "in": "query", "required": false, "schema": {"type": "string", "enum": ["UNKNOWN", "CENTRAL", "SCANNER"], "default": "UNKNOWN"}}], "tags": ["CredentialExpiryService"]}]}]}, {"name": "ClusterCVE", "func": [{"method": "get", "detail": []}]}, {"name": "CVE", "func": [{"method": "get", "detail": []}]}, {"name": "ImageCVE", "func": [{"method": "get", "detail": []}]}, {"name": "NodeCVE", "func": [{"method": "get", "detail": []}]}, {"name": "DB", "func": [{"method": "get", "detail": [{"operationId": "DBService_GetExportCapabilities", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetDBExportCapabilitiesResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["DBService"]}, {"operationId": "DBService_GetActiveRestoreProcess", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetActiveDBRestoreProcessResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["DBService"]}]}]}, {"name": "Debug", "func": [{"method": "get", "detail": [{"summary": "Stream authorization traces for all incoming requests.", "operationId": "DebugService_StreamAuthzTraces", "responses": {"200": {"description": "A successful response.(streaming responses)", "content": {"application/json": {"schema": {"type": "object", "properties": {"result": {"$ref": "#/components/schemas/v1AuthorizationTraceResponse"}, "error": {"$ref": "#/components/schemas/runtimeStreamError"}}, "title": "Stream result of v1AuthorizationTraceResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["DebugService"]}, {"summary": "Get the current logging level for StackRox services.", "operationId": "DebugService_GetLogLevel", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1LogLevelResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "modules", "in": "query", "required": false, "explode": true, "schema": {"type": "array", "items": {"type": "string"}}}], "tags": ["DebugService"]}]}]}, {"name": "Deployment", "func": [{"method": "get", "detail": [{"summary": "ListDeployments returns the list of deployments.", "operationId": "DeploymentService_ListDeployments", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1ListDeploymentsResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "query", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pagination.limit", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "pagination.offset", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "pagination.sortOption.field", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pagination.sortOption.reversed", "in": "query", "required": false, "schema": {"type": "boolean"}}], "tags": ["DeploymentService"]}, {"summary": "GetLabels returns the labels used by deployments.", "operationId": "DeploymentService_GetLabels", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1DeploymentLabelsResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["DeploymentService"]}, {"summary": "GetDeployment returns a deployment given its ID.", "operationId": "DeploymentService_GetDeployment", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storageDeployment"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["DeploymentService"]}, {"summary": "CountDeployments returns the number of deployments.", "operationId": "DeploymentService_CountDeployments", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1CountDeploymentsResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "query", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pagination.limit", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "pagination.offset", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "pagination.sortOption.field", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pagination.sortOption.reversed", "in": "query", "required": false, "schema": {"type": "boolean"}}], "tags": ["DeploymentService"]}, {"summary": "ListDeploymentsWithProcessInfo returns the list of deployments with process information.", "operationId": "DeploymentService_ListDeploymentsWithProcessInfo", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1ListDeploymentsWithProcessInfoResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "query", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pagination.limit", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "pagination.offset", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "pagination.sortOption.field", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pagination.sortOption.reversed", "in": "query", "required": false, "schema": {"type": "boolean"}}], "tags": ["DeploymentService"]}, {"summary": "GetDeploymentWithRisk returns a deployment and its risk given its ID.", "operationId": "DeploymentService_GetDeploymentWithRisk", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetDeploymentWithRiskResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["DeploymentService"]}]}]}, {"name": "Detection", "func": [{"method": "get", "detail": []}]}, {"name": "FeatureFlag", "func": [{"method": "get", "detail": [{"operationId": "FeatureFlagService_GetFeatureFlags", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetFeatureFlagsResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["FeatureFlagService"]}]}]}, {"name": "Group", "func": [{"method": "get", "detail": [{"operationId": "GroupService_GetGroup", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storageGroup"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "description": "Unique identifier for group properties and respectively the group.", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "authProviderId", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "key", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "value", "in": "query", "required": false, "schema": {"type": "string"}}], "tags": ["GroupService"]}, {"operationId": "GroupService_GetGroups", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetGroupsResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "authProviderId", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "key", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "value", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "id", "in": "query", "required": false, "schema": {"type": "string"}}], "tags": ["GroupService"]}]}]}, {"name": "ImageIntegration", "func": [{"method": "get", "detail": [{"summary": "GetImageIntegrations returns all image integrations that match the request filters.", "operationId": "ImageIntegrationService_GetImageIntegrations", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetImageIntegrationsResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "name", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "cluster", "in": "query", "required": false, "schema": {"type": "string"}}], "tags": ["ImageIntegrationService"]}, {"summary": "GetImageIntegration returns the image integration given its ID.", "operationId": "ImageIntegrationService_GetImageIntegration", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storageImageIntegration"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["ImageIntegrationService"]}]}]}, {"name": "Image", "func": [{"method": "get", "detail": [{"summary": "ListImages returns all the images.", "operationId": "ImageService_ListImages", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1ListImagesResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "query", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pagination.limit", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "pagination.offset", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "pagination.sortOption.field", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pagination.sortOption.reversed", "in": "query", "required": false, "schema": {"type": "boolean"}}], "tags": ["ImageService"]}, {"summary": "InvalidateScanAndRegistryCaches removes the image metadata cache.", "operationId": "ImageService_InvalidateScanAndRegistryCaches", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["ImageService"]}, {"summary": "GetImage returns the image given its ID.", "operationId": "ImageService_GetImage", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storageImage"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "includeSnoozed", "in": "query", "required": false, "schema": {"type": "boolean"}}, {"name": "stripDescription", "in": "query", "required": false, "schema": {"type": "boolean"}}], "tags": ["ImageService"]}, {"summary": "ListImages returns all the images.", "operationId": "ImageService_CountImages", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1CountImagesResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "query", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pagination.limit", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "pagination.offset", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "pagination.sortOption.field", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pagination.sortOption.reversed", "in": "query", "required": false, "schema": {"type": "boolean"}}], "tags": ["ImageService"]}, {"summary": "GetWatchedImages returns the list of image names that are currently\nbeing watched.", "operationId": "ImageService_GetWatchedImages", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetWatchedImagesResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["ImageService"]}]}]}, {"name": "IntegrationHealth", "func": [{"method": "get", "detail": [{"operationId": "IntegrationHealthService_GetBackupPlugins", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetIntegrationHealthResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["IntegrationHealthService"]}, {"operationId": "IntegrationHealthService_GetImageIntegrations", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetIntegrationHealthResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["IntegrationHealthService"]}, {"operationId": "IntegrationHealthService_GetNotifiers", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetIntegrationHealthResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["IntegrationHealthService"]}, {"operationId": "IntegrationHealthService_GetVulnDefinitionsInfo", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1VulnDefinitionsInfo"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["IntegrationHealthService"]}]}]}, {"name": "License", "func": [{"method": "get", "detail": [{"operationId": "LicenseService_GetActiveLicenseKey", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetActiveLicenseKeyResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["LicenseService"]}, {"operationId": "LicenseService_GetActiveLicenseExpiration", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetActiveLicenseExpirationResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["LicenseService"]}, {"operationId": "LicenseService_GetLicenses", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetLicensesResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "active", "in": "query", "required": false, "schema": {"type": "boolean"}}, {"name": "statuses", "in": "query", "required": false, "explode": true, "schema": {"type": "array", "items": {"type": "string", "enum": ["UNKNOWN", "VALID", "REVOKED", "NOT_YET_VALID", "EXPIRED", "OTHER"]}}}], "tags": ["LicenseService"]}]}]}, {"name": "Metadata", "func": [{"method": "get", "detail": [{"operationId": "MetadataService_GetMetadata", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Metadata"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["MetadataService"]}, {"operationId": "MetadataService_TLSChallenge", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1TLSChallengeResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "challengeToken", "description": "generated challenge token by the service asking for TLS certs.", "in": "query", "required": false, "schema": {"type": "string"}}], "tags": ["MetadataService"]}]}]}, {"name": "MitreAttack", "func": [{"method": "get", "detail": [{"summary": "ListMitreAttackVectors returns all MITRE ATT&CK vectors.", "operationId": "MitreAttackService_ListMitreAttackVectors", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1ListMitreAttackVectorsResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["MitreAttackService"]}, {"summary": "GetMitreAttackVector returns the full MITRE ATT&CK vector for a tactic with all its techniques.", "operationId": "MitreAttackService_GetMitreAttackVector", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetMitreVectorResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["MitreAttackService"]}]}]}, {"name": "Namespace", "func": [{"method": "get", "detail": [{"operationId": "NamespaceService_GetNamespaces", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetNamespacesResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "query.query", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "query.pagination.limit", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "query.pagination.offset", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "query.pagination.sortOption.field", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "query.pagination.sortOption.reversed", "in": "query", "required": false, "schema": {"type": "boolean"}}], "tags": ["NamespaceService"]}, {"operationId": "NamespaceService_GetNamespace", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Namespace"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["NamespaceService"]}]}]}, {"name": "NetworkBaseline", "func": [{"method": "get", "detail": [{"operationId": "NetworkBaselineService_GetNetworkBaseline", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storageNetworkBaseline"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["NetworkBaselineService"]}]}]}, {"name": "NetworkGraph", "func": [{"method": "get", "detail": [{"operationId": "NetworkGraphService_GetNetworkGraph", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1NetworkGraph"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "clusterId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "query", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "since", "in": "query", "required": false, "schema": {"type": "string", "format": "date-time"}}, {"name": "includePorts", "in": "query", "required": false, "schema": {"type": "boolean"}}, {"name": "scope.query", "in": "query", "required": false, "schema": {"type": "string"}}], "tags": ["NetworkGraphService"]}, {"operationId": "NetworkGraphService_GetExternalNetworkEntities", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetExternalNetworkEntitiesResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "clusterId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "query", "in": "query", "required": false, "schema": {"type": "string"}}], "tags": ["NetworkGraphService"]}, {"operationId": "NetworkGraphService_GetNetworkGraphConfig", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storageNetworkGraphConfig"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["NetworkGraphService"]}]}]}, {"name": "NetworkPolicy", "func": [{"method": "get", "detail": [{"operationId": "NetworkPolicyService_GetNetworkPolicies", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1NetworkPoliciesResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "clusterId", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "deploymentQuery", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "namespace", "in": "query", "required": false, "schema": {"type": "string"}}], "tags": ["NetworkPolicyService"]}, {"operationId": "NetworkPolicyService_GetAllowedPeersFromCurrentPolicyForDeployment", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetAllowedPeersFromCurrentPolicyForDeploymentResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["NetworkPolicyService"]}, {"operationId": "NetworkPolicyService_GetDiffFlowsBetweenPolicyAndBaselineForDeployment", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetDiffFlowsResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["NetworkPolicyService"]}, {"operationId": "NetworkPolicyService_GetNetworkGraph", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1NetworkGraph"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "clusterId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "query", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "includePorts", "description": "If set to true, include port-level information in the network policy graph.", "in": "query", "required": false, "schema": {"type": "boolean"}}, {"name": "scope.query", "in": "query", "required": false, "schema": {"type": "string"}}], "tags": ["NetworkPolicyService"]}, {"operationId": "NetworkPolicyService_GenerateNetworkPolicies", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GenerateNetworkPoliciesResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "clusterId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "query", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "deleteExisting", "in": "query", "required": false, "schema": {"type": "string", "enum": ["UNKNOWN", "NONE", "GENERATED_ONLY", "ALL"], "default": "UNKNOWN"}}, {"name": "networkDataSince", "in": "query", "required": false, "schema": {"type": "string", "format": "date-time"}}, {"name": "includePorts", "in": "query", "required": false, "schema": {"type": "boolean"}}], "tags": ["NetworkPolicyService"]}, {"operationId": "NetworkPolicyService_GetNetworkGraphEpoch", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1NetworkGraphEpoch"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "clusterId", "in": "query", "required": false, "schema": {"type": "string"}}], "tags": ["NetworkPolicyService"]}, {"operationId": "NetworkPolicyService_GetUndoModificationForDeployment", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetUndoModificationForDeploymentResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["NetworkPolicyService"]}, {"operationId": "NetworkPolicyService_GetUndoModification", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetUndoModificationResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "clusterId", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["NetworkPolicyService"]}, {"operationId": "NetworkPolicyService_GetDiffFlowsFromUndoModificationForDeployment", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetDiffFlowsResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["NetworkPolicyService"]}, {"operationId": "NetworkPolicyService_GetNetworkPolicy", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storageNetworkPolicy"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["NetworkPolicyService"]}]}]}, {"name": "Node", "func": [{"method": "get", "detail": [{"operationId": "NodeService_ListNodes", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1ListNodesResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "clusterId", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["NodeService"]}, {"operationId": "NodeService_GetNode", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storageNode"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "clusterId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "nodeId", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["NodeService"]}]}]}, {"name": "Notifier", "func": [{"method": "get", "detail": [{"summary": "GetNotifiers returns all notifier configurations.", "operationId": "NotifierService_GetNotifiers", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetNotifiersResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["NotifierService"]}, {"summary": "GetNotifier returns the notifier configuration given its ID.", "operationId": "NotifierService_GetNotifier", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storageNotifier"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["NotifierService"]}]}]}, {"name": "Ping", "func": [{"method": "get", "detail": [{"operationId": "PingService_Ping", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1PongMessage"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["PingService"]}]}]}, {"name": "Pod", "func": [{"method": "get", "detail": [{"summary": "GetPods returns the pods.", "operationId": "PodService_GetPods", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1PodsResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "query", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pagination.limit", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "pagination.offset", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "pagination.sortOption.field", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pagination.sortOption.reversed", "in": "query", "required": false, "schema": {"type": "boolean"}}], "tags": ["PodService"]}]}]}, {"name": "PolicyCategory", "func": [{"method": "get", "detail": [{"summary": "GetPolicyCategories returns the list of policy categories", "operationId": "PolicyCategoryService_GetPolicyCategories", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetPolicyCategoriesResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "query", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pagination.limit", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "pagination.offset", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "pagination.sortOption.field", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pagination.sortOption.reversed", "in": "query", "required": false, "schema": {"type": "boolean"}}], "tags": ["PolicyCategoryService"]}, {"summary": "GetPolicyCategory returns the requested policy category by ID.", "operationId": "PolicyCategoryService_GetPolicyCategory", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1PolicyCategory"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["PolicyCategoryService"]}]}]}, {"name": "Policy", "func": [{"method": "get", "detail": [{"summary": "ListPolicies returns the list of policies.", "operationId": "PolicyService_ListPolicies", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1ListPoliciesResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "query", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pagination.limit", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "pagination.offset", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "pagination.sortOption.field", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pagination.sortOption.reversed", "in": "query", "required": false, "schema": {"type": "boolean"}}], "tags": ["PolicyService"]}, {"operationId": "PolicyService_QueryDryRunJobStatus", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1DryRunJobStatusResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "jobId", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["PolicyService"]}, {"summary": "GetPolicy returns the requested policy by ID.", "operationId": "PolicyService_GetPolicy", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storagePolicy"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["PolicyService"]}, {"summary": "GetMitreVectorsForPolicy returns the requested policy by ID.", "operationId": "PolicyService_GetPolicyMitreVectors", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetPolicyMitreVectorsResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "options.excludePolicy", "description": "If set to true, policy is excluded from the response.", "in": "query", "required": false, "schema": {"type": "boolean"}}], "tags": ["PolicyService"]}, {"summary": "GetPolicyCategories returns the policy categories.", "operationId": "PolicyService_GetPolicyCategories", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1PolicyCategoriesResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["PolicyService"]}]}]}, {"name": "ProbeUpload", "func": [{"method": "get", "detail": []}]}, {"name": "ProcessBaseline", "func": [{"method": "get", "detail": [{"summary": "`GetProcessBaselineById` returns the single\nprocess baseline referenced by the given ID.", "operationId": "ProcessBaselineService_GetProcessBaseline", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storageProcessBaseline"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "key.deploymentId", "description": "The idea is for the keys to be flexible.\nOnly certain combinations of these will be supported.", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "key.containerName", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "key.clusterId", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "key.namespace", "in": "query", "required": false, "schema": {"type": "string"}}], "tags": ["ProcessBaselineService"]}]}]}, {"name": "Process", "func": [{"method": "get", "detail": [{"summary": "GetProcessesByDeployment returns the processes executed in the given deployment.", "operationId": "ProcessService_GetProcessesByDeployment", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetProcessesResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "deploymentId", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["ProcessService"]}, {"summary": "GetGroupedProcessByDeployment returns all the processes executed grouped by deployment.", "operationId": "ProcessService_GetGroupedProcessByDeployment", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetGroupedProcessesResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "deploymentId", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["ProcessService"]}, {"summary": "GetGroupedProcessByDeploymentAndContainer returns all the processes executed grouped by deployment and container.", "operationId": "ProcessService_GetGroupedProcessByDeploymentAndContainer", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetGroupedProcessesWithContainerResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "deploymentId", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["ProcessService"]}]}]}, {"name": "Rbac", "func": [{"method": "get", "detail": [{"operationId": "RbacService_ListRoleBindings", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1ListRoleBindingsResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "query", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pagination.limit", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "pagination.offset", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "pagination.sortOption.field", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pagination.sortOption.reversed", "in": "query", "required": false, "schema": {"type": "boolean"}}], "tags": ["RbacService"]}, {"operationId": "RbacService_GetRoleBinding", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetRoleBindingResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["RbacService"]}, {"operationId": "RbacService_ListRoles", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1ListRolesResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "query", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pagination.limit", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "pagination.offset", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "pagination.sortOption.field", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pagination.sortOption.reversed", "in": "query", "required": false, "schema": {"type": "boolean"}}], "tags": ["RbacService"]}, {"operationId": "RbacService_GetRole", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetRoleResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["RbacService"]}, {"summary": "Subjects served from this API are Groups and Users only.\nId in this case is the Name field, since for users and groups, that is unique, and subjects do not have IDs.", "operationId": "RbacService_GetSubject", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetSubjectResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["RbacService"]}, {"operationId": "RbacService_ListSubjects", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1ListSubjectsResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "query", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pagination.limit", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "pagination.offset", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "pagination.sortOption.field", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pagination.sortOption.reversed", "in": "query", "required": false, "schema": {"type": "boolean"}}], "tags": ["RbacService"]}]}]}, {"name": "ReportConfiguration", "func": [{"method": "get", "detail": [{"summary": "CountReportConfigurations returns the number of report configurations.", "operationId": "ReportConfigurationService_CountReportConfigurations", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1CountReportConfigurationsResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "query", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pagination.limit", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "pagination.offset", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "pagination.sortOption.field", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pagination.sortOption.reversed", "in": "query", "required": false, "schema": {"type": "boolean"}}], "tags": ["ReportConfigurationService"]}, {"operationId": "ReportConfigurationService_GetReportConfigurations", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetReportConfigurationsResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "query", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pagination.limit", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "pagination.offset", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "pagination.sortOption.field", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pagination.sortOption.reversed", "in": "query", "required": false, "schema": {"type": "boolean"}}], "tags": ["ReportConfigurationService"]}, {"operationId": "ReportConfigurationService_GetReportConfiguration", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetReportConfigurationResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["ReportConfigurationService"]}]}]}, {"name": "Report", "func": [{"method": "get", "detail": []}]}, {"name": "Role", "func": [{"method": "get", "detail": [{"operationId": "RoleService_GetMyPermissions", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetPermissionsResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["RoleService"]}, {"operationId": "RoleService_ListPermissionSets", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1ListPermissionSetsResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["RoleService"]}, {"operationId": "RoleService_GetPermissionSet", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storagePermissionSet"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["RoleService"]}, {"operationId": "RoleService_GetResources", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetResourcesResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["RoleService"]}, {"operationId": "RoleService_GetRoles", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetRolesResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["RoleService"]}, {"operationId": "RoleService_GetRole", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storageRole"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["RoleService"]}, {"operationId": "RoleService_ListSimpleAccessScopes", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1ListSimpleAccessScopesResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["RoleService"]}, {"operationId": "RoleService_GetSimpleAccessScope", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storageSimpleAccessScope"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["RoleService"]}]}]}, {"name": "Search", "func": [{"method": "get", "detail": [{"operationId": "SearchService_Search", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1SearchResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "query", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "categories", "in": "query", "required": false, "explode": true, "schema": {"type": "array", "items": {"type": "string", "enum": ["SEARCH_UNSET", "ALERTS", "IMAGES", "IMAGE_COMPONENTS", "IMAGE_VULN_EDGE", "IMAGE_COMPONENT_EDGE", "POLICIES", "DEPLOYMENTS", "ACTIVE_COMPONENT", "PODS", "SECRETS", "PROCESS_INDICATORS", "COMPLIANCE", "CLUSTERS", "NAMESPACES", "NODES", "NODE_COMPONENTS", "NODE_VULN_EDGE", "NODE_COMPONENT_EDGE", "NODE_COMPONENT_CVE_EDGE", "COMPLIANCE_STANDARD", "COMPLIANCE_CONTROL_GROUP", "COMPLIANCE_CONTROL", "SERVICE_ACCOUNTS", "ROLES", "ROLEBINDINGS", "REPORT_CONFIGURATIONS", "PROCESS_BASELINES", "SUBJECTS", "RISKS", "VULNERABILITIES", "CLUSTER_VULNERABILITIES", "IMAGE_VULNERABILITIES", "NODE_VULNERABILITIES", "COMPONENT_VULN_EDGE", "CLUSTER_VULN_EDGE", "NETWORK_ENTITY", "VULN_REQUEST", "NETWORK_BASELINE", "NETWORK_POLICIES", "PROCESS_BASELINE_RESULTS", "COMPLIANCE_METADATA", "COMPLIANCE_RESULTS", "COMPLIANCE_DOMAIN", "CLUSTER_HEALTH", "POLICY_CATEGORIES"]}}}], "tags": ["SearchService"]}, {"operationId": "SearchService_Autocomplete", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1AutocompleteResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "query", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "categories", "in": "query", "required": false, "explode": true, "schema": {"type": "array", "items": {"type": "string", "enum": ["SEARCH_UNSET", "ALERTS", "IMAGES", "IMAGE_COMPONENTS", "IMAGE_VULN_EDGE", "IMAGE_COMPONENT_EDGE", "POLICIES", "DEPLOYMENTS", "ACTIVE_COMPONENT", "PODS", "SECRETS", "PROCESS_INDICATORS", "COMPLIANCE", "CLUSTERS", "NAMESPACES", "NODES", "NODE_COMPONENTS", "NODE_VULN_EDGE", "NODE_COMPONENT_EDGE", "NODE_COMPONENT_CVE_EDGE", "COMPLIANCE_STANDARD", "COMPLIANCE_CONTROL_GROUP", "COMPLIANCE_CONTROL", "SERVICE_ACCOUNTS", "ROLES", "ROLEBINDINGS", "REPORT_CONFIGURATIONS", "PROCESS_BASELINES", "SUBJECTS", "RISKS", "VULNERABILITIES", "CLUSTER_VULNERABILITIES", "IMAGE_VULNERABILITIES", "NODE_VULNERABILITIES", "COMPONENT_VULN_EDGE", "CLUSTER_VULN_EDGE", "NETWORK_ENTITY", "VULN_REQUEST", "NETWORK_BASELINE", "NETWORK_POLICIES", "PROCESS_BASELINE_RESULTS", "COMPLIANCE_METADATA", "COMPLIANCE_RESULTS", "COMPLIANCE_DOMAIN", "CLUSTER_HEALTH", "POLICY_CATEGORIES"]}}}], "tags": ["SearchService"]}, {"operationId": "SearchService_Options", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1SearchOptionsResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "categories", "in": "query", "required": false, "explode": true, "schema": {"type": "array", "items": {"type": "string", "enum": ["SEARCH_UNSET", "ALERTS", "IMAGES", "IMAGE_COMPONENTS", "IMAGE_VULN_EDGE", "IMAGE_COMPONENT_EDGE", "POLICIES", "DEPLOYMENTS", "ACTIVE_COMPONENT", "PODS", "SECRETS", "PROCESS_INDICATORS", "COMPLIANCE", "CLUSTERS", "NAMESPACES", "NODES", "NODE_COMPONENTS", "NODE_VULN_EDGE", "NODE_COMPONENT_EDGE", "NODE_COMPONENT_CVE_EDGE", "COMPLIANCE_STANDARD", "COMPLIANCE_CONTROL_GROUP", "COMPLIANCE_CONTROL", "SERVICE_ACCOUNTS", "ROLES", "ROLEBINDINGS", "REPORT_CONFIGURATIONS", "PROCESS_BASELINES", "SUBJECTS", "RISKS", "VULNERABILITIES", "CLUSTER_VULNERABILITIES", "IMAGE_VULNERABILITIES", "NODE_VULNERABILITIES", "COMPONENT_VULN_EDGE", "CLUSTER_VULN_EDGE", "NETWORK_ENTITY", "VULN_REQUEST", "NETWORK_BASELINE", "NETWORK_POLICIES", "PROCESS_BASELINE_RESULTS", "COMPLIANCE_METADATA", "COMPLIANCE_RESULTS", "COMPLIANCE_DOMAIN", "CLUSTER_HEALTH", "POLICY_CATEGORIES"]}}}], "tags": ["SearchService"]}]}]}, {"name": "Secret", "func": [{"method": "get", "detail": [{"summary": "ListSecrets returns the list of secrets.", "operationId": "SecretService_ListSecrets", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1ListSecretsResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "query", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pagination.limit", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "pagination.offset", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "pagination.sortOption.field", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pagination.sortOption.reversed", "in": "query", "required": false, "schema": {"type": "boolean"}}], "tags": ["SecretService"]}, {"summary": "GetSecret returns a secret given its ID.", "operationId": "SecretService_GetSecret", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storageSecret"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["SecretService"]}, {"summary": "CountSecrets returns the number of secrets.", "operationId": "SecretService_CountSecrets", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1CountSecretsResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "query", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pagination.limit", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "pagination.offset", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "pagination.sortOption.field", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pagination.sortOption.reversed", "in": "query", "required": false, "schema": {"type": "boolean"}}], "tags": ["SecretService"]}]}]}, {"name": "SensorUpgrade", "func": [{"method": "get", "detail": [{"operationId": "SensorUpgradeService_GetSensorUpgradeConfig", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetSensorUpgradeConfigResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["SensorUpgradeService"]}]}]}, {"name": "Account", "func": [{"method": "get", "detail": []}]}, {"name": "Identity", "func": [{"method": "get", "detail": []}]}, {"name": "SignatureIntegration", "func": [{"method": "get", "detail": [{"operationId": "SignatureIntegrationService_ListSignatureIntegrations", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1ListSignatureIntegrationsResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["SignatureIntegrationService"]}, {"operationId": "SignatureIntegrationService_GetSignatureIntegration", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storageSignatureIntegration"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["SignatureIntegrationService"]}]}]}, {"name": "Summary", "func": [{"method": "get", "detail": [{"operationId": "SummaryService_GetSummaryCounts", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1SummaryCountsResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["SummaryService"]}]}]}, {"name": "Telemetry", "func": [{"method": "get", "detail": [{"operationId": "TelemetryService_GetTelemetryConfiguration", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storageTelemetryConfiguration"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["TelemetryService"]}]}]}, {"name": "User", "func": [{"method": "get", "detail": [{"operationId": "UserService_GetUsers", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetUsersResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["UserService"]}, {"operationId": "UserService_GetUser", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storageUser"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["UserService"]}, {"operationId": "UserService_GetUsersAttributes", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetUsersAttributesResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["UserService"]}]}]}, {"name": "VulnerabilityRequest", "func": [{"method": "get", "detail": [{"summary": "ListVulnerabilityRequests returns the list of vulnerability requests.", "operationId": "VulnerabilityRequestService_ListVulnerabilityRequests", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1ListVulnerabilityRequestsResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "query", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pagination.limit", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "pagination.offset", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "pagination.sortOption.field", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "pagination.sortOption.reversed", "in": "query", "required": false, "schema": {"type": "boolean"}}], "tags": ["VulnerabilityRequestService"]}, {"summary": "GetVulnerabilityRequest returns the requested vulnerability request by ID.", "operationId": "VulnerabilityRequestService_GetVulnerabilityRequest", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetVulnerabilityRequestResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["VulnerabilityRequestService"]}]}]}, {"name": "Alert", "func": [{"method": "delete", "detail": [{"operationId": "AlertService_DeleteAlerts", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1DeleteAlertsResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "query.query", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "query.pagination.limit", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "query.pagination.offset", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "query.pagination.sortOption.field", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "query.pagination.sortOption.reversed", "in": "query", "required": false, "schema": {"type": "boolean"}}, {"name": "confirm", "in": "query", "required": false, "schema": {"type": "boolean"}}], "tags": ["AlertService"]}]}]}, {"name": "APIToken", "func": [{"method": "delete", "detail": []}]}, {"name": "Auth", "func": [{"method": "delete", "detail": []}]}, {"name": "AuthProvider", "func": [{"method": "delete", "detail": [{"operationId": "AuthProviderService_DeleteAuthProvider", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["AuthProviderService"]}]}]}, {"name": "ExternalBackup", "func": [{"method": "delete", "detail": [{"summary": "DeleteExternalBackup removes an external backup configuration given its ID.", "operationId": "ExternalBackupService_DeleteExternalBackup", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["ExternalBackupService"]}]}]}, {"name": "CentralHealth", "func": [{"method": "delete", "detail": []}]}, {"name": "ClusterInit", "func": [{"method": "delete", "detail": []}]}, {"name": "Clusters", "func": [{"method": "delete", "detail": [{"operationId": "ClustersService_DeleteCluster", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["ClustersService"]}]}]}, {"name": "ComplianceManagement", "func": [{"method": "delete", "detail": []}]}, {"name": "Compliance", "func": [{"method": "delete", "detail": []}]}, {"name": "Config", "func": [{"method": "delete", "detail": []}]}, {"name": "CredentialExpiry", "func": [{"method": "delete", "detail": []}]}, {"name": "ClusterCVE", "func": [{"method": "delete", "detail": []}]}, {"name": "CVE", "func": [{"method": "delete", "detail": []}]}, {"name": "ImageCVE", "func": [{"method": "delete", "detail": []}]}, {"name": "NodeCVE", "func": [{"method": "delete", "detail": []}]}, {"name": "DB", "func": [{"method": "delete", "detail": [{"operationId": "DBService_CancelRestoreProcess", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["DBService"]}]}]}, {"name": "Debug", "func": [{"method": "delete", "detail": []}]}, {"name": "Deployment", "func": [{"method": "delete", "detail": []}]}, {"name": "Detection", "func": [{"method": "delete", "detail": []}]}, {"name": "FeatureFlag", "func": [{"method": "delete", "detail": []}]}, {"name": "Group", "func": [{"method": "delete", "detail": [{"operationId": "GroupService_DeleteGroup", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "description": "Unique identifier for group properties and respectively the group.", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "authProviderId", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "key", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "value", "in": "query", "required": false, "schema": {"type": "string"}}], "tags": ["GroupService"]}]}]}, {"name": "ImageIntegration", "func": [{"method": "delete", "detail": [{"summary": "DeleteImageIntegration removes a image integration given its ID.", "operationId": "ImageIntegrationService_DeleteImageIntegration", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["ImageIntegrationService"]}]}]}, {"name": "Image", "func": [{"method": "delete", "detail": [{"summary": "DeleteImage removes the images based on a query", "operationId": "ImageService_DeleteImages", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1DeleteImagesResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "query.query", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "query.pagination.limit", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "query.pagination.offset", "in": "query", "required": false, "schema": {"type": "integer", "format": "int32"}}, {"name": "query.pagination.sortOption.field", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "query.pagination.sortOption.reversed", "in": "query", "required": false, "schema": {"type": "boolean"}}, {"name": "confirm", "in": "query", "required": false, "schema": {"type": "boolean"}}], "tags": ["ImageService"]}, {"summary": "UnwatchImage marks an image name to no longer be watched.\nIt returns successfully if the image is no longer being watched\nafter the call, irrespective of whether the image was already being watched.", "operationId": "ImageService_UnwatchImage", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "name", "description": "The name of the image to unwatch.\nShould match the name of a previously watched image.", "in": "query", "required": false, "schema": {"type": "string"}}], "tags": ["ImageService"]}]}]}, {"name": "IntegrationHealth", "func": [{"method": "delete", "detail": []}]}, {"name": "License", "func": [{"method": "delete", "detail": []}]}, {"name": "Metadata", "func": [{"method": "delete", "detail": []}]}, {"name": "MitreAttack", "func": [{"method": "delete", "detail": []}]}, {"name": "Namespace", "func": [{"method": "delete", "detail": []}]}, {"name": "NetworkBaseline", "func": [{"method": "delete", "detail": []}]}, {"name": "NetworkGraph", "func": [{"method": "delete", "detail": [{"operationId": "NetworkGraphService_DeleteExternalNetworkEntity", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["NetworkGraphService"]}]}]}, {"name": "NetworkPolicy", "func": [{"method": "delete", "detail": []}]}, {"name": "Node", "func": [{"method": "delete", "detail": []}]}, {"name": "Notifier", "func": [{"method": "delete", "detail": [{"summary": "DeleteNotifier removes a notifier configuration given its ID.", "operationId": "NotifierService_DeleteNotifier", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "force", "in": "query", "required": false, "schema": {"type": "boolean"}}], "tags": ["NotifierService"]}]}]}, {"name": "Ping", "func": [{"method": "delete", "detail": []}]}, {"name": "Pod", "func": [{"method": "delete", "detail": []}]}, {"name": "PolicyCategory", "func": [{"method": "delete", "detail": [{"summary": "DeletePolicyCategory removes the given policy category.", "operationId": "PolicyCategoryService_DeletePolicyCategory", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["PolicyCategoryService"]}]}]}, {"name": "Policy", "func": [{"method": "delete", "detail": [{"operationId": "PolicyService_CancelDryRunJob", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "jobId", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["PolicyService"]}, {"summary": "DeletePolicy removes a policy by ID.", "operationId": "PolicyService_DeletePolicy", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["PolicyService"]}, {"summary": "DeletePolicyCategory removes the given policy category.", "operationId": "PolicyService_DeletePolicyCategory", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "category", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["PolicyService"]}]}]}, {"name": "ProbeUpload", "func": [{"method": "delete", "detail": []}]}, {"name": "ProcessBaseline", "func": [{"method": "delete", "detail": [{"summary": "`DeleteProcessBaselines` deletes baselines.", "operationId": "ProcessBaselineService_DeleteProcessBaselines", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1DeleteProcessBaselinesResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "query", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "confirm", "in": "query", "required": false, "schema": {"type": "boolean"}}], "tags": ["ProcessBaselineService"]}]}]}, {"name": "Process", "func": [{"method": "delete", "detail": []}]}, {"name": "Rbac", "func": [{"method": "delete", "detail": []}]}, {"name": "ReportConfiguration", "func": [{"method": "delete", "detail": [{"summary": "DeleteReportConfiguration removes a report configuration given its id", "operationId": "ReportConfigurationService_DeleteReportConfiguration", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["ReportConfigurationService"]}]}]}, {"name": "Report", "func": [{"method": "delete", "detail": []}]}, {"name": "Role", "func": [{"method": "delete", "detail": [{"operationId": "RoleService_DeletePermissionSet", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["RoleService"]}, {"operationId": "RoleService_DeleteRole", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["RoleService"]}, {"operationId": "RoleService_DeleteSimpleAccessScope", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["RoleService"]}]}]}, {"name": "Search", "func": [{"method": "delete", "detail": []}]}, {"name": "Secret", "func": [{"method": "delete", "detail": []}]}, {"name": "SensorUpgrade", "func": [{"method": "delete", "detail": []}]}, {"name": "Account", "func": [{"method": "delete", "detail": []}]}, {"name": "Identity", "func": [{"method": "delete", "detail": []}]}, {"name": "SignatureIntegration", "func": [{"method": "delete", "detail": [{"operationId": "SignatureIntegrationService_DeleteSignatureIntegration", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["SignatureIntegrationService"]}]}]}, {"name": "Summary", "func": [{"method": "delete", "detail": []}]}, {"name": "Telemetry", "func": [{"method": "delete", "detail": []}]}, {"name": "User", "func": [{"method": "delete", "detail": []}]}, {"name": "VulnerabilityRequest", "func": [{"method": "delete", "detail": [{"summary": "DeleteVulnerabilityRequest deletes a vulnerability request.", "operationId": "VulnerabilityRequestService_DeleteVulnerabilityRequest", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["VulnerabilityRequestService"]}]}]}, {"name": "Alert", "func": [{"method": "patch", "detail": [{"summary": "ResolveAlertsByQuery marks alerts matching search query as resolved.", "operationId": "AlertService_ResolveAlerts", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1ResolveAlertsRequest"}}}, "required": true}, "tags": ["AlertService"]}, {"summary": "ResolveAlert marks the given alert (by ID) as resolved.", "operationId": "AlertService_ResolveAlert", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1ResolveAlertRequest"}}}, "required": true}, "tags": ["AlertService"]}, {"summary": "SnoozeAlert is deprecated.", "operationId": "AlertService_SnoozeAlert", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1SnoozeAlertRequest"}}}, "required": true}, "tags": ["AlertService"]}]}]}, {"name": "APIToken", "func": [{"method": "patch", "detail": [{"summary": "RevokeToken removes the API token for a given id.", "operationId": "APITokenService_RevokeToken", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["APITokenService"]}]}]}, {"name": "Auth", "func": [{"method": "patch", "detail": []}]}, {"name": "AuthProvider", "func": [{"method": "patch", "detail": [{"operationId": "AuthProviderService_UpdateAuthProvider", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storageAuthProvider"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1UpdateAuthProviderRequest"}}}, "required": true}, "tags": ["AuthProviderService"]}]}]}, {"name": "ExternalBackup", "func": [{"method": "patch", "detail": [{"summary": "UpdateExternalBackup modifies a given external backup, with optional stored credential reconciliation.", "operationId": "ExternalBackupService_UpdateExternalBackup", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storageExternalBackup"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "externalBackup.id", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"$ref": "#/components/requestBodies/v1UpdateExternalBackupRequest"}, "tags": ["ExternalBackupService"]}]}]}, {"name": "CentralHealth", "func": [{"method": "patch", "detail": []}]}, {"name": "ClusterInit", "func": [{"method": "patch", "detail": [{"summary": "RevokeInitBundle deletes cluster init bundle. If this operation impacts any cluster\nthen its ID should be included in request.\nIf confirm_impacted_clusters_ids does not match with current impacted clusters\nthen request will fail with error that includes all impacted clusters.", "operationId": "ClusterInitService_RevokeInitBundle", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1InitBundleRevokeResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1InitBundleRevokeRequest"}}}, "required": true}, "tags": ["ClusterInitService"]}]}]}, {"name": "Clusters", "func": [{"method": "patch", "detail": []}]}, {"name": "ComplianceManagement", "func": [{"method": "patch", "detail": []}]}, {"name": "Compliance", "func": [{"method": "patch", "detail": []}]}, {"name": "Config", "func": [{"method": "patch", "detail": []}]}, {"name": "CredentialExpiry", "func": [{"method": "patch", "detail": []}]}, {"name": "ClusterCVE", "func": [{"method": "patch", "detail": [{"summary": "SuppressCVE suppresses cluster cves.", "operationId": "ClusterCVEService_SuppressCVEs", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"$ref": "#/components/requestBodies/v1SuppressCVERequest"}, "tags": ["ClusterCVEService"]}, {"summary": "UnsuppressCVE unsuppresses cluster cves.", "operationId": "ClusterCVEService_UnsuppressCVEs", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"$ref": "#/components/requestBodies/v1UnsuppressCVERequest"}, "tags": ["ClusterCVEService"]}]}]}, {"name": "CVE", "func": [{"method": "patch", "detail": [{"summary": "SuppressCVE suppresses cves.", "operationId": "CVEService_SuppressCVEs", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"$ref": "#/components/requestBodies/v1SuppressCVERequest"}, "tags": ["CVEService"]}, {"summary": "UnsuppressCVE unsuppresses cves.", "operationId": "CVEService_UnsuppressCVEs", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"$ref": "#/components/requestBodies/v1UnsuppressCVERequest"}, "tags": ["CVEService"]}]}]}, {"name": "ImageCVE", "func": [{"method": "patch", "detail": [{"summary": "SuppressCVE suppresses image cves.", "operationId": "ImageCVEService_SuppressCVEs", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"$ref": "#/components/requestBodies/v1SuppressCVERequest"}, "tags": ["ImageCVEService"]}, {"summary": "UnsuppressCVE unsuppresses image cves.", "operationId": "ImageCVEService_UnsuppressCVEs", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"$ref": "#/components/requestBodies/v1UnsuppressCVERequest"}, "tags": ["ImageCVEService"]}]}]}, {"name": "NodeCVE", "func": [{"method": "patch", "detail": [{"summary": "SuppressCVE suppresses node cves.", "operationId": "NodeCVEService_SuppressCVEs", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"$ref": "#/components/requestBodies/v1SuppressCVERequest"}, "tags": ["NodeCVEService"]}, {"summary": "UnsuppressCVE unsuppresses node cves.", "operationId": "NodeCVEService_UnsuppressCVEs", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"$ref": "#/components/requestBodies/v1UnsuppressCVERequest"}, "tags": ["NodeCVEService"]}]}]}, {"name": "DB", "func": [{"method": "patch", "detail": []}]}, {"name": "Debug", "func": [{"method": "patch", "detail": [{"summary": "Set logging level for StackRox services.", "operationId": "DebugService_SetLogLevel", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"properties": {}}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1LogLevelRequest"}}}, "required": true}, "tags": ["DebugService"]}]}]}, {"name": "Deployment", "func": [{"method": "patch", "detail": []}]}, {"name": "Detection", "func": [{"method": "patch", "detail": []}]}, {"name": "FeatureFlag", "func": [{"method": "patch", "detail": []}]}, {"name": "Group", "func": [{"method": "patch", "detail": []}]}, {"name": "ImageIntegration", "func": [{"method": "patch", "detail": [{"summary": "UpdateImageIntegration modifies a given image integration, with optional stored credential reconciliation.", "operationId": "ImageIntegrationService_UpdateImageIntegration", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "config.id", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"$ref": "#/components/requestBodies/v1UpdateImageIntegrationRequest"}, "tags": ["ImageIntegrationService"]}]}]}, {"name": "Image", "func": [{"method": "patch", "detail": []}]}, {"name": "IntegrationHealth", "func": [{"method": "patch", "detail": []}]}, {"name": "License", "func": [{"method": "patch", "detail": []}]}, {"name": "Metadata", "func": [{"method": "patch", "detail": []}]}, {"name": "MitreAttack", "func": [{"method": "patch", "detail": []}]}, {"name": "Namespace", "func": [{"method": "patch", "detail": []}]}, {"name": "NetworkBaseline", "func": [{"method": "patch", "detail": [{"operationId": "NetworkBaselineService_ModifyBaselineStatusForPeers", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "deploymentId", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1ModifyBaselineStatusForPeersRequest"}}}, "required": true}, "tags": ["NetworkBaselineService"]}, {"operationId": "NetworkBaselineService_LockNetworkBaseline", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"$ref": "#/components/requestBodies/v1ResourceByID"}, "tags": ["NetworkBaselineService"]}, {"operationId": "NetworkBaselineService_UnlockNetworkBaseline", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"$ref": "#/components/requestBodies/v1ResourceByID"}, "tags": ["NetworkBaselineService"]}]}]}, {"name": "NetworkGraph", "func": [{"method": "patch", "detail": [{"operationId": "NetworkGraphService_PatchExternalNetworkEntity", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storageNetworkEntity"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1PatchNetworkEntityRequest"}}}, "required": true}, "tags": ["NetworkGraphService"]}]}]}, {"name": "NetworkPolicy", "func": [{"method": "patch", "detail": []}]}, {"name": "Node", "func": [{"method": "patch", "detail": []}]}, {"name": "Notifier", "func": [{"method": "patch", "detail": [{"summary": "UpdateNotifier modifies a given notifier, with optional stored credential reconciliation.", "operationId": "NotifierService_UpdateNotifier", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "notifier.id", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"$ref": "#/components/requestBodies/v1UpdateNotifierRequest"}, "tags": ["NotifierService"]}]}]}, {"name": "Ping", "func": [{"method": "patch", "detail": []}]}, {"name": "Pod", "func": [{"method": "patch", "detail": []}]}, {"name": "PolicyCategory", "func": [{"method": "patch", "detail": []}]}, {"name": "Policy", "func": [{"method": "patch", "detail": [{"summary": "PatchPolicy edits an existing policy.", "operationId": "PolicyService_PatchPolicy", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1PatchPolicyRequest"}}}, "required": true}, "tags": ["PolicyService"]}, {"summary": "EnableDisablePolicyNotification enables or disables notifications for a policy by ID.", "operationId": "PolicyService_EnableDisablePolicyNotification", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "policyId", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1EnableDisablePolicyNotificationRequest"}}}, "required": true}, "tags": ["PolicyService"]}]}]}, {"name": "ProbeUpload", "func": [{"method": "patch", "detail": []}]}, {"name": "ProcessBaseline", "func": [{"method": "patch", "detail": []}]}, {"name": "Process", "func": [{"method": "patch", "detail": []}]}, {"name": "Rbac", "func": [{"method": "patch", "detail": []}]}, {"name": "ReportConfiguration", "func": [{"method": "patch", "detail": []}]}, {"name": "Report", "func": [{"method": "patch", "detail": []}]}, {"name": "Role", "func": [{"method": "patch", "detail": []}]}, {"name": "Search", "func": [{"method": "patch", "detail": []}]}, {"name": "Secret", "func": [{"method": "patch", "detail": []}]}, {"name": "SensorUpgrade", "func": [{"method": "patch", "detail": []}]}, {"name": "Account", "func": [{"method": "patch", "detail": []}]}, {"name": "Identity", "func": [{"method": "patch", "detail": []}]}, {"name": "SignatureIntegration", "func": [{"method": "patch", "detail": []}]}, {"name": "Summary", "func": [{"method": "patch", "detail": []}]}, {"name": "Telemetry", "func": [{"method": "patch", "detail": []}]}, {"name": "User", "func": [{"method": "patch", "detail": []}]}, {"name": "VulnerabilityRequest", "func": [{"method": "patch", "detail": []}]}, {"name": "Alert", "func": [{"method": "post", "detail": []}]}, {"name": "APIToken", "func": [{"method": "post", "detail": [{"summary": "GenerateToken generates API token for a given user and role.", "operationId": "APITokenService_GenerateToken", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GenerateTokenResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GenerateTokenRequest"}}}, "required": true}, "tags": ["APITokenService"]}]}]}, {"name": "Auth", "func": [{"method": "post", "detail": []}]}, {"name": "AuthProvider", "func": [{"method": "post", "detail": [{"operationId": "AuthProviderService_PostAuthProvider", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storageAuthProvider"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"$ref": "#/components/requestBodies/storageAuthProvider"}, "tags": ["AuthProviderService"]}, {"operationId": "AuthProviderService_ExchangeToken", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1ExchangeTokenResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1ExchangeTokenRequest"}}}, "required": true}, "tags": ["AuthProviderService"]}]}]}, {"name": "ExternalBackup", "func": [{"method": "post", "detail": [{"summary": "PostExternalBackup creates an external backup configuration.", "operationId": "ExternalBackupService_PostExternalBackup", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storageExternalBackup"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"$ref": "#/components/requestBodies/storageExternalBackup"}, "tags": ["ExternalBackupService"]}, {"summary": "TestExternalBackup tests an external backup configuration.", "operationId": "ExternalBackupService_TestExternalBackup", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"$ref": "#/components/requestBodies/storageExternalBackup"}, "tags": ["ExternalBackupService"]}, {"summary": "TestUpdatedExternalBackup checks if the given external backup is correctly configured, with optional stored credential reconciliation.", "operationId": "ExternalBackupService_TestUpdatedExternalBackup", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"$ref": "#/components/requestBodies/v1UpdateExternalBackupRequest"}, "tags": ["ExternalBackupService"]}, {"summary": "TriggerExternalBackup initiates an external backup for the given configuration.", "operationId": "ExternalBackupService_TriggerExternalBackup", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["ExternalBackupService"]}]}]}, {"name": "CentralHealth", "func": [{"method": "post", "detail": []}]}, {"name": "ClusterInit", "func": [{"method": "post", "detail": [{"operationId": "ClusterInitService_GenerateInitBundle", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1InitBundleGenResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1InitBundleGenRequest"}}}, "required": true}, "tags": ["ClusterInitService"]}]}]}, {"name": "Clusters", "func": [{"method": "post", "detail": [{"operationId": "ClustersService_PostCluster", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1ClusterResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"$ref": "#/components/requestBodies/storageCluster"}, "tags": ["ClustersService"]}]}]}, {"name": "ComplianceManagement", "func": [{"method": "post", "detail": [{"operationId": "ComplianceManagementService_TriggerRuns", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1TriggerComplianceRunsResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1TriggerComplianceRunsRequest"}}}, "required": true}, "tags": ["ComplianceManagementService"]}]}]}, {"name": "Compliance", "func": [{"method": "post", "detail": []}]}, {"name": "Config", "func": [{"method": "post", "detail": []}]}, {"name": "CredentialExpiry", "func": [{"method": "post", "detail": []}]}, {"name": "ClusterCVE", "func": [{"method": "post", "detail": []}]}, {"name": "CVE", "func": [{"method": "post", "detail": []}]}, {"name": "ImageCVE", "func": [{"method": "post", "detail": []}]}, {"name": "NodeCVE", "func": [{"method": "post", "detail": []}]}, {"name": "DB", "func": [{"method": "post", "detail": [{"operationId": "DBService_InterruptRestoreProcess", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1InterruptDBRestoreProcessResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "processId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "attemptId", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["DBService"]}]}]}, {"name": "Debug", "func": [{"method": "post", "detail": []}]}, {"name": "Deployment", "func": [{"method": "post", "detail": []}]}, {"name": "Detection", "func": [{"method": "post", "detail": [{"summary": "DetectBuildTime checks if any images violate build time policies.", "operationId": "DetectionService_DetectBuildTime", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1BuildDetectionResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1BuildDetectionRequest"}}}, "required": true}, "tags": ["DetectionService"]}, {"summary": "DetectDeployTime checks if any deployments violate deploy time policies.", "operationId": "DetectionService_DetectDeployTime", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1DeployDetectionResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1DeployDetectionRequest"}}}, "required": true}, "tags": ["DetectionService"]}, {"summary": "DetectDeployTimeFromYAML checks if the given deployment yaml violates any deploy time policies.", "operationId": "DetectionService_DetectDeployTimeFromYAML", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1DeployDetectionResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1DeployYAMLDetectionRequest"}}}, "required": true}, "tags": ["DetectionService"]}]}]}, {"name": "FeatureFlag", "func": [{"method": "post", "detail": []}]}, {"name": "Group", "func": [{"method": "post", "detail": [{"operationId": "GroupService_CreateGroup", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"$ref": "#/components/requestBodies/storageGroup"}, "tags": ["GroupService"]}, {"operationId": "GroupService_BatchUpdate", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GroupBatchUpdateRequest"}}}, "required": true}, "tags": ["GroupService"]}]}]}, {"name": "ImageIntegration", "func": [{"method": "post", "detail": [{"summary": "PostImageIntegration creates a image integration.", "operationId": "ImageIntegrationService_PostImageIntegration", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storageImageIntegration"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"$ref": "#/components/requestBodies/storageImageIntegration"}, "tags": ["ImageIntegrationService"]}, {"summary": "TestImageIntegration checks if the given image integration is correctly configured, without using stored credential reconciliation.", "operationId": "ImageIntegrationService_TestImageIntegration", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"$ref": "#/components/requestBodies/storageImageIntegration"}, "tags": ["ImageIntegrationService"]}, {"summary": "TestUpdatedImageIntegration checks if the given image integration is correctly configured, with optional stored credential reconciliation.", "operationId": "ImageIntegrationService_TestUpdatedImageIntegration", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"$ref": "#/components/requestBodies/v1UpdateImageIntegrationRequest"}, "tags": ["ImageIntegrationService"]}]}]}, {"name": "Image", "func": [{"method": "post", "detail": [{"summary": "ScanImage scans a single image and returns the result", "operationId": "ImageService_ScanImage", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storageImage"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1ScanImageRequest"}}}, "required": true}, "tags": ["ImageService"]}, {"summary": "WatchImage marks an image name as to be watched.", "operationId": "ImageService_WatchImage", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1WatchImageResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1WatchImageRequest"}}}, "required": true}, "tags": ["ImageService"]}]}]}, {"name": "IntegrationHealth", "func": [{"method": "post", "detail": []}]}, {"name": "License", "func": [{"method": "post", "detail": [{"operationId": "LicenseService_AddLicense", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1AddLicenseResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1AddLicenseRequest"}}}, "required": true}, "tags": ["LicenseService"]}]}]}, {"name": "Metadata", "func": [{"method": "post", "detail": []}]}, {"name": "MitreAttack", "func": [{"method": "post", "detail": []}]}, {"name": "Namespace", "func": [{"method": "post", "detail": []}]}, {"name": "NetworkBaseline", "func": [{"method": "post", "detail": [{"operationId": "NetworkBaselineService_GetNetworkBaselineStatusForFlows", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1NetworkBaselineStatusResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "deploymentId", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1NetworkBaselineStatusRequest"}}}, "required": true}, "tags": ["NetworkBaselineService"]}]}]}, {"name": "NetworkGraph", "func": [{"method": "post", "detail": [{"operationId": "NetworkGraphService_CreateExternalNetworkEntity", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storageNetworkEntity"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "clusterId", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1CreateNetworkEntityRequest"}}}, "required": true}, "tags": ["NetworkGraphService"]}]}]}, {"name": "NetworkPolicy", "func": [{"method": "post", "detail": [{"operationId": "NetworkPolicyService_ApplyNetworkPolicyYamlForDeployment", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "deploymentId", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1ApplyNetworkPolicyYamlForDeploymentRequest"}}}, "required": true}, "tags": ["NetworkPolicyService"]}, {"operationId": "NetworkPolicyService_ApplyNetworkPolicy", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "clusterId", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"$ref": "#/components/requestBodies/storageNetworkPolicyModification"}, "tags": ["NetworkPolicyService"]}, {"operationId": "NetworkPolicyService_GetBaselineGeneratedNetworkPolicyForDeployment", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetBaselineGeneratedPolicyForDeploymentResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "deploymentId", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetBaselineGeneratedPolicyForDeploymentRequest"}}}, "required": true}, "tags": ["NetworkPolicyService"]}, {"operationId": "NetworkPolicyService_SimulateNetworkGraph", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1SimulateNetworkGraphResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "clusterId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "query", "in": "query", "required": false, "schema": {"type": "string"}}, {"name": "includePorts", "description": "If set to true, include port-level information in the network policy graph.", "in": "query", "required": false, "schema": {"type": "boolean"}}, {"name": "includeNodeDiff", "in": "query", "required": false, "schema": {"type": "boolean"}}, {"name": "scope.query", "in": "query", "required": false, "schema": {"type": "string"}}], "requestBody": {"$ref": "#/components/requestBodies/storageNetworkPolicyModification"}, "tags": ["NetworkPolicyService"]}, {"operationId": "NetworkPolicyService_SendNetworkPolicyYAML", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "clusterId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "notifierIds", "in": "query", "required": false, "explode": true, "schema": {"type": "array", "items": {"type": "string"}}}], "requestBody": {"$ref": "#/components/requestBodies/storageNetworkPolicyModification"}, "tags": ["NetworkPolicyService"]}]}]}, {"name": "Node", "func": [{"method": "post", "detail": []}]}, {"name": "Notifier", "func": [{"method": "post", "detail": [{"summary": "PostNotifier creates a notifier configuration.", "operationId": "NotifierService_PostNotifier", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storageNotifier"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"$ref": "#/components/requestBodies/storageNotifier"}, "tags": ["NotifierService"]}, {"summary": "TestNotifier checks if a notifier is correctly configured.", "operationId": "NotifierService_TestNotifier", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"$ref": "#/components/requestBodies/storageNotifier"}, "tags": ["NotifierService"]}, {"summary": "TestUpdatedNotifier checks if the given notifier is correctly configured, with optional stored credential reconciliation.", "operationId": "NotifierService_TestUpdatedNotifier", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"$ref": "#/components/requestBodies/v1UpdateNotifierRequest"}, "tags": ["NotifierService"]}]}]}, {"name": "Ping", "func": [{"method": "post", "detail": []}]}, {"name": "Pod", "func": [{"method": "post", "detail": []}]}, {"name": "PolicyCategory", "func": [{"method": "post", "detail": [{"summary": "PostPolicyCategory creates a new policy category", "operationId": "PolicyCategoryService_PostPolicyCategory", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1PolicyCategory"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1PolicyCategory"}}}, "required": true}, "tags": ["PolicyCategoryService"]}]}]}, {"name": "Policy", "func": [{"method": "post", "detail": [{"summary": "PostPolicy creates a new policy.", "operationId": "PolicyService_PostPolicy", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storagePolicy"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "enableStrictValidation", "in": "query", "required": false, "schema": {"type": "boolean"}}], "requestBody": {"$ref": "#/components/requestBodies/storagePolicy"}, "tags": ["PolicyService"]}, {"summary": "DryRunPolicy evaluates the given policy and returns any alerts without creating the policy.", "operationId": "PolicyService_DryRunPolicy", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1DryRunResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"$ref": "#/components/requestBodies/storagePolicy"}, "tags": ["PolicyService"]}, {"operationId": "PolicyService_SubmitDryRunPolicyJob", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1JobId"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"$ref": "#/components/requestBodies/storagePolicy"}, "tags": ["PolicyService"]}, {"summary": "ExportPolicies takes a list of policy IDs and returns either the entire list of policies or an error message", "operationId": "PolicyService_ExportPolicies", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storageExportPoliciesResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1ExportPoliciesRequest"}}}, "required": true}, "tags": ["PolicyService"]}, {"operationId": "PolicyService_PolicyFromSearch", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1PolicyFromSearchResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1PolicyFromSearchRequest"}}}, "required": true}, "tags": ["PolicyService"]}, {"summary": "ImportPolicies accepts a list of Policies and returns a list of the policies which could not be imported", "operationId": "PolicyService_ImportPolicies", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1ImportPoliciesResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1ImportPoliciesRequest"}}}, "required": true}, "tags": ["PolicyService"]}, {"summary": "ReassessPolicies reevaluates all the policies.", "operationId": "PolicyService_ReassessPolicies", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["PolicyService"]}]}]}, {"name": "ProbeUpload", "func": [{"method": "post", "detail": [{"operationId": "ProbeUploadService_GetExistingProbes", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1GetExistingProbesResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "tags": ["ProbeUploadService"]}]}]}, {"name": "ProcessBaseline", "func": [{"method": "post", "detail": []}]}, {"name": "Process", "func": [{"method": "post", "detail": []}]}, {"name": "Rbac", "func": [{"method": "post", "detail": []}]}, {"name": "ReportConfiguration", "func": [{"method": "post", "detail": [{"summary": "PostReportConfiguration creates a report configuration", "operationId": "ReportConfigurationService_PostReportConfiguration", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1PostReportConfigurationResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1PostReportConfigurationRequest"}}}, "required": true}, "tags": ["ReportConfigurationService"]}]}]}, {"name": "Report", "func": [{"method": "post", "detail": [{"operationId": "ReportService_RunReport", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["ReportService"]}]}]}, {"name": "Role", "func": [{"method": "post", "detail": [{"summary": "ComputeEffectiveAccessScope", "description": "Returns effective access scope based on the rules in the request. Does\nnot persist anything; not idempotent due to possible changes to clusters\nand namespaces. POST is chosen due to potentially large payload.\n\nThere are advantages in both keeping the response slim and detailed. If\nonly IDs of selected clusters and namespaces are included, response\nlatency and processing time are lower but the caller shall overlay the\nresponse with its view of the world which is susceptible to consistency\nissues. Listing all clusters and namespaces with related metadata is\nconvenient for the caller but bloat the message with secondary data.\n\nWe let the caller decide what level of detail they would like to have:\n\n  * Minimal, when only roots of included subtrees are listed by their\n    IDs. Clusters can be either INCLUDED (its namespaces are included but\n    are not listed) or PARTIAL (at least one namespace is explicitly\n    included). Namespaces can only be INCLUDED.\n\n  * Standard [default], when all known clusters and namespaces are listed\n    with their IDs and names. Clusters can be INCLUDED (all its\n    namespaces are explicitly listed as INCLUDED), PARTIAL (all its\n    namespaces are explicitly listed, some as INCLUDED and some as\n    EXCLUDED), and EXCLUDED (all its namespaces are explicitly listed as\n    EXCLUDED). Namespaces can be either INCLUDED or EXCLUDED.\n\n  * High, when every cluster and namespace is augmented with metadata.", "operationId": "RoleService_ComputeEffectiveAccessScope", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storageEffectiveAccessScope"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "detail", "in": "query", "required": false, "schema": {"type": "string", "enum": ["STANDARD", "MINIMAL", "HIGH"], "default": "STANDARD"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ComputeEffectiveAccessScopeRequestPayload"}}}, "required": true}, "tags": ["RoleService"]}, {"summary": "PostPermissionSet", "description": "PermissionSet.id is disallowed in request and set in response.", "operationId": "RoleService_PostPermissionSet", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storagePermissionSet"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"$ref": "#/components/requestBodies/storagePermissionSet"}, "tags": ["RoleService"]}, {"operationId": "RoleService_CreateRole", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "name", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"$ref": "#/components/requestBodies/storageRole"}, "tags": ["RoleService"]}, {"summary": "PostSimpleAccessScope", "description": "SimpleAccessScope.id is disallowed in request and set in response.", "operationId": "RoleService_PostSimpleAccessScope", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storageSimpleAccessScope"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"$ref": "#/components/requestBodies/storageSimpleAccessScope"}, "tags": ["RoleService"]}]}]}, {"name": "Search", "func": [{"method": "post", "detail": []}]}, {"name": "Secret", "func": [{"method": "post", "detail": []}]}, {"name": "SensorUpgrade", "func": [{"method": "post", "detail": [{"operationId": "SensorUpgradeService_TriggerSensorUpgrade", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["SensorUpgradeService"]}, {"operationId": "SensorUpgradeService_UpdateSensorUpgradeConfig", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1UpdateSensorUpgradeConfigRequest"}}}, "required": true}, "tags": ["SensorUpgradeService"]}, {"operationId": "SensorUpgradeService_TriggerSensorCertRotation", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["SensorUpgradeService"]}]}]}, {"name": "Account", "func": [{"method": "post", "detail": []}]}, {"name": "Identity", "func": [{"method": "post", "detail": []}]}, {"name": "SignatureIntegration", "func": [{"method": "post", "detail": [{"summary": "Integration id should not be set.\nReturns signature integration with id filled.", "operationId": "SignatureIntegrationService_PostSignatureIntegration", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storageSignatureIntegration"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"$ref": "#/components/requestBodies/storageSignatureIntegration"}, "tags": ["SignatureIntegrationService"]}]}]}, {"name": "Summary", "func": [{"method": "post", "detail": []}]}, {"name": "Telemetry", "func": [{"method": "post", "detail": []}]}, {"name": "User", "func": [{"method": "post", "detail": []}]}, {"name": "VulnerabilityRequest", "func": [{"method": "post", "detail": [{"summary": "DeferVulnerability starts the deferral process for the specified vulnerability.", "operationId": "VulnerabilityRequestService_DeferVulnerability", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1DeferVulnResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1DeferVulnRequest"}}}, "required": true}, "tags": ["VulnerabilityRequestService"]}, {"summary": "FalsePositiveVulnerability starts the process to mark the specified vulnerability as false-positive.", "operationId": "VulnerabilityRequestService_FalsePositiveVulnerability", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1FalsePositiveVulnResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1FalsePositiveVulnRequest"}}}, "required": true}, "tags": ["VulnerabilityRequestService"]}, {"summary": "ApproveVulnRequest approve a vulnerability request. If it is an unwatch vulnerability request then the\nassociated vulnerabilities are not watched in workflows such as policy detection, risk, etc.", "operationId": "VulnerabilityRequestService_ApproveVulnerabilityRequest", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1ApproveVulnRequestResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1ApproveVulnRequest"}}}, "required": true}, "tags": ["VulnerabilityRequestService"]}, {"summary": "DenyVulnRequest denies a vulnerability request.", "operationId": "VulnerabilityRequestService_DenyVulnerabilityRequest", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1DenyVulnRequestResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1DenyVulnRequest"}}}, "required": true}, "tags": ["VulnerabilityRequestService"]}, {"summary": "UndoVulnerabilityRequest undoes a vulnerability request.", "operationId": "VulnerabilityRequestService_UndoVulnerabilityRequest", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1UndoVulnRequestResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "tags": ["VulnerabilityRequestService"]}, {"summary": "UpdateVulnerabilityRequest updates an existing vulnerability request. Currently only deferral expiration time can be updated.", "operationId": "VulnerabilityRequestService_UpdateVulnerabilityRequest", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1UpdateVulnRequestResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1UpdateVulnRequest"}}}, "required": true}, "tags": ["VulnerabilityRequestService"]}]}]}, {"name": "Alert", "func": [{"method": "put", "detail": []}]}, {"name": "APIToken", "func": [{"method": "put", "detail": []}]}, {"name": "Auth", "func": [{"method": "put", "detail": []}]}, {"name": "AuthProvider", "func": [{"method": "put", "detail": [{"operationId": "AuthProviderService_PutAuthProvider", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storageAuthProvider"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"$ref": "#/components/requestBodies/storageAuthProvider"}, "tags": ["AuthProviderService"]}]}]}, {"name": "ExternalBackup", "func": [{"method": "put", "detail": [{"summary": "PutExternalBackup modifies a given external backup, without using stored credential reconciliation.", "operationId": "ExternalBackupService_PutExternalBackup", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storageExternalBackup"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"$ref": "#/components/requestBodies/storageExternalBackup"}, "tags": ["ExternalBackupService"]}]}]}, {"name": "CentralHealth", "func": [{"method": "put", "detail": []}]}, {"name": "ClusterInit", "func": [{"method": "put", "detail": []}]}, {"name": "Clusters", "func": [{"method": "put", "detail": [{"operationId": "ClustersService_PutCluster", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1ClusterResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"$ref": "#/components/requestBodies/storageCluster"}, "tags": ["ClustersService"]}]}]}, {"name": "ComplianceManagement", "func": [{"method": "put", "detail": []}]}, {"name": "Compliance", "func": [{"method": "put", "detail": []}]}, {"name": "Config", "func": [{"method": "put", "detail": [{"operationId": "ConfigService_PutConfig", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storageConfig"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1PutConfigRequest"}}}, "required": true}, "tags": ["ConfigService"]}]}]}, {"name": "CredentialExpiry", "func": [{"method": "put", "detail": []}]}, {"name": "ClusterCVE", "func": [{"method": "put", "detail": []}]}, {"name": "CVE", "func": [{"method": "put", "detail": []}]}, {"name": "ImageCVE", "func": [{"method": "put", "detail": []}]}, {"name": "NodeCVE", "func": [{"method": "put", "detail": []}]}, {"name": "DB", "func": [{"method": "put", "detail": []}]}, {"name": "Debug", "func": [{"method": "put", "detail": []}]}, {"name": "Deployment", "func": [{"method": "put", "detail": []}]}, {"name": "Detection", "func": [{"method": "put", "detail": []}]}, {"name": "FeatureFlag", "func": [{"method": "put", "detail": []}]}, {"name": "Group", "func": [{"method": "put", "detail": [{"operationId": "GroupService_UpdateGroup", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"$ref": "#/components/requestBodies/storageGroup"}, "tags": ["GroupService"]}]}]}, {"name": "ImageIntegration", "func": [{"method": "put", "detail": [{"summary": "PutImageIntegration modifies a given image integration, without using stored credential reconciliation.", "operationId": "ImageIntegrationService_PutImageIntegration", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"$ref": "#/components/requestBodies/storageImageIntegration"}, "tags": ["ImageIntegrationService"]}]}]}, {"name": "Image", "func": [{"method": "put", "detail": []}]}, {"name": "IntegrationHealth", "func": [{"method": "put", "detail": []}]}, {"name": "License", "func": [{"method": "put", "detail": []}]}, {"name": "Metadata", "func": [{"method": "put", "detail": []}]}, {"name": "MitreAttack", "func": [{"method": "put", "detail": []}]}, {"name": "Namespace", "func": [{"method": "put", "detail": []}]}, {"name": "NetworkBaseline", "func": [{"method": "put", "detail": []}]}, {"name": "NetworkGraph", "func": [{"method": "put", "detail": [{"operationId": "NetworkGraphService_PutNetworkGraphConfig", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storageNetworkGraphConfig"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1PutNetworkGraphConfigRequest"}}}, "required": true}, "tags": ["NetworkGraphService"]}]}]}, {"name": "NetworkPolicy", "func": [{"method": "put", "detail": []}]}, {"name": "Node", "func": [{"method": "put", "detail": []}]}, {"name": "Notifier", "func": [{"method": "put", "detail": [{"summary": "PutNotifier modifies a given notifier, without using stored credential reconciliation.", "operationId": "NotifierService_PutNotifier", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"$ref": "#/components/requestBodies/storageNotifier"}, "tags": ["NotifierService"]}]}]}, {"name": "Ping", "func": [{"method": "put", "detail": []}]}, {"name": "Pod", "func": [{"method": "put", "detail": []}]}, {"name": "PolicyCategory", "func": [{"method": "put", "detail": [{"summary": "RenamePolicyCategory renames the given policy category.", "operationId": "PolicyCategoryService_RenamePolicyCategory", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1NewRenamePolicyCategoryRequest"}}}, "required": true}, "tags": ["PolicyCategoryService"]}]}]}, {"name": "Policy", "func": [{"method": "put", "detail": [{"summary": "PutPolicy modifies an existing policy.", "operationId": "PolicyService_PutPolicy", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"$ref": "#/components/requestBodies/storagePolicy"}, "tags": ["PolicyService"]}, {"summary": "RenamePolicyCategory renames the given policy category.", "operationId": "PolicyService_RenamePolicyCategory", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "oldCategory", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1RenamePolicyCategoryRequest"}}}, "required": true}, "tags": ["PolicyService"]}]}]}, {"name": "ProbeUpload", "func": [{"method": "put", "detail": []}]}, {"name": "ProcessBaseline", "func": [{"method": "put", "detail": [{"summary": "`AddToProcessBaselines` adds a list of process\nnames to each of a list of process baselines.", "operationId": "ProcessBaselineService_UpdateProcessBaselines", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1UpdateProcessBaselinesResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1UpdateProcessBaselinesRequest"}}}, "required": true}, "tags": ["ProcessBaselineService"]}, {"summary": "`LockProcessBaselines` accepts a list of baseline IDs, locks\nthose baselines, and returns the updated baseline objects.", "operationId": "ProcessBaselineService_LockProcessBaselines", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1UpdateProcessBaselinesResponse"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1LockProcessBaselinesRequest"}}}, "required": true}, "tags": ["ProcessBaselineService"]}]}]}, {"name": "Process", "func": [{"method": "put", "detail": []}]}, {"name": "Rbac", "func": [{"method": "put", "detail": []}]}, {"name": "ReportConfiguration", "func": [{"method": "put", "detail": [{"summary": "UpdateReportConfiguration updates a report configuration", "operationId": "ReportConfigurationService_UpdateReportConfiguration", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1UpdateReportConfigurationRequest"}}}, "required": true}, "tags": ["ReportConfigurationService"]}]}]}, {"name": "Report", "func": [{"method": "put", "detail": []}]}, {"name": "Role", "func": [{"method": "put", "detail": [{"operationId": "RoleService_PutPermissionSet", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "description": "id is generated and cannot be changed.", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"$ref": "#/components/requestBodies/storagePermissionSet"}, "tags": ["RoleService"]}, {"operationId": "RoleService_UpdateRole", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "name", "description": "`name` and `description` are provided by the user and can be changed.", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"$ref": "#/components/requestBodies/storageRole"}, "tags": ["RoleService"]}, {"operationId": "RoleService_PutSimpleAccessScope", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "description": "`id` is generated and cannot be changed.", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"$ref": "#/components/requestBodies/storageSimpleAccessScope"}, "tags": ["RoleService"]}]}]}, {"name": "Search", "func": [{"method": "put", "detail": []}]}, {"name": "Secret", "func": [{"method": "put", "detail": []}]}, {"name": "SensorUpgrade", "func": [{"method": "put", "detail": []}]}, {"name": "Account", "func": [{"method": "put", "detail": []}]}, {"name": "Identity", "func": [{"method": "put", "detail": []}]}, {"name": "SignatureIntegration", "func": [{"method": "put", "detail": [{"operationId": "SignatureIntegrationService_PutSignatureIntegration", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1Empty"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"$ref": "#/components/requestBodies/storageSignatureIntegration"}, "tags": ["SignatureIntegrationService"]}]}]}, {"name": "Summary", "func": [{"method": "put", "detail": []}]}, {"name": "Telemetry", "func": [{"method": "put", "detail": [{"operationId": "TelemetryService_ConfigureTelemetry", "responses": {"200": {"description": "A successful response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/storageTelemetryConfiguration"}}}}, "default": {"description": "An unexpected error response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/runtimeError"}}}}}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/v1ConfigureTelemetryRequest"}}}, "required": true}, "tags": ["TelemetryService"]}]}]}, {"name": "User", "func": [{"method": "put", "detail": []}]}, {"name": "VulnerabilityRequest", "func": [{"method": "put", "detail": []}]}]